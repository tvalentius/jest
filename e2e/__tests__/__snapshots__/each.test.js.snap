// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`runs only the describe.only.each tests 1`] = `
"PASS __tests__/describe-only.test.js
  passes all rows expected true == true
    ✓ passes
    ✓ passes
  fails all rows expected false == true
    ○ skipped 1 test

"
`;

exports[`shows error message when not enough arguments are supplied to tests 1`] = `
"FAIL __tests__/each-exception.test.js
  ✕ throws exception when not enough arguments are supplied $left == $right

  ● throws exception when not enough arguments are supplied $left == $right

    Not enough arguments supplied for given headings:
    left | right

    Received:
    Array [
      true,
      true,
      true,
    ]

    Missing 1 arguments

       6 |  */
       7 | 
    >  8 | it.each\`
         | ^
       9 |   left    | right
      10 |   \${true} | \${true}
      11 |   \${true}

      at __tests__/each-exception.test.js:8:1

"
`;

exports[`shows only the tests with .only as being ran 1`] = `
"PASS __tests__/each-only.test.js
  ✓ passes one row expected true == true
  ✓ passes one row expected true == true
  ✓ passes one row expected true == true
  ✓ passes one row expected true == true
  ○ skipped 4 tests

"
`;

exports[`shows only the tests without .skip as being ran 1`] = `
"PASS __tests__/each-skip.test.js
  ✓ passes one row expected true == true
  ✓ passes one row expected true == true
  ✓ passes one row expected true == true
  ✓ passes one row expected true == true
  ○ skipped 4 tests
  passes all rows expected true == true
    ○ skipped 2 tests

"
`;

exports[`shows the correct errors in stderr when failing tests 1`] = `
"FAIL __tests__/failure.test.js
  ✓ array table fails on one row: expected true == true
  ✕ array table fails on one row: expected true == false
  ✕ array table fails on all rows expected 1 == 2
  ✕ array table fails on all rows expected 3 == 4
  ✕ template table fails on one row expected: true == false
  ✓ template table fails on one row expected: true == true
  ✕ template table fails on all rows expected: 1 == 2
  ✕ template table fails on all rows expected: 3 == 4
  ✕ The word red contains the letter 'z'
  ✕ The word green contains the letter 'z'
  ✕ The word bean contains the letter 'z'
  template table describe fails on all rows expected a == b
    ✕ fails
  template table describe fails on all rows expected c == d
    ✕ fails
  array table describe fails on all rows expected a == b
    ✕ fails
  array table describe fails on all rows expected c == d
    ✕ fails

  ● array table fails on one row: expected true == false

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

       9 |   'array table fails on one row: expected %s == %s',
      10 |   (left, right) => {
    > 11 |     expect(left).toBe(right);
         |                  ^
      12 |   }
      13 | );
      14 |

      at __tests__/failure.test.js:11:18

  ● array table fails on all rows expected 1 == 2

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 1

      16 |   'array table fails on all rows expected %s == %s',
      17 |   (left, right) => {
    > 18 |     expect(left).toBe(right);
         |                  ^
      19 |   }
      20 | );
      21 |

      at __tests__/failure.test.js:18:18

  ● array table fails on all rows expected 3 == 4

    expect(received).toBe(expected) // Object.is equality

    Expected: 4
    Received: 3

      16 |   'array table fails on all rows expected %s == %s',
      17 |   (left, right) => {
    > 18 |     expect(left).toBe(right);
         |                  ^
      19 |   }
      20 | );
      21 |

      at __tests__/failure.test.js:18:18

  ● template table fails on one row expected: true == false

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      27 |   'template table fails on one row expected: $left == $right',
      28 |   ({left, right}) => {
    > 29 |     expect(left).toBe(right);
         |                  ^
      30 |   }
      31 | );
      32 |

      at __tests__/failure.test.js:29:18

  ● template table fails on all rows expected: 1 == 2

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 1

      38 |   'template table fails on all rows expected: $left == $right',
      39 |   ({left, right}) => {
    > 40 |     expect(left).toBe(right);
         |                  ^
      41 |   }
      42 | );
      43 |

      at __tests__/failure.test.js:40:18

  ● template table fails on all rows expected: 3 == 4

    expect(received).toBe(expected) // Object.is equality

    Expected: 4
    Received: 3

      38 |   'template table fails on all rows expected: $left == $right',
      39 |   ({left, right}) => {
    > 40 |     expect(left).toBe(right);
         |                  ^
      41 |   }
      42 | );
      43 |

      at __tests__/failure.test.js:40:18

  ● The word red contains the letter 'z'

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      45 |   \\"The word %s contains the letter 'z'\\",
      46 |   word => {
    > 47 |     expect(/z/.test(word)).toBe(true);
         |                            ^
      48 |   }
      49 | );
      50 |

      at __tests__/failure.test.js:47:28

  ● The word green contains the letter 'z'

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      45 |   \\"The word %s contains the letter 'z'\\",
      46 |   word => {
    > 47 |     expect(/z/.test(word)).toBe(true);
         |                            ^
      48 |   }
      49 | );
      50 |

      at __tests__/failure.test.js:47:28

  ● The word bean contains the letter 'z'

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      45 |   \\"The word %s contains the letter 'z'\\",
      46 |   word => {
    > 47 |     expect(/z/.test(word)).toBe(true);
         |                            ^
      48 |   }
      49 | );
      50 |

      at __tests__/failure.test.js:47:28

  ● template table describe fails on all rows expected a == b › fails

    expect(received).toBe(expected) // Object.is equality

    Expected: \\"b\\"
    Received: \\"a\\"

      57 |   ({left, right}) => {
      58 |     it('fails ', () => {
    > 59 |       expect(left).toBe(right);
         |                    ^
      60 |     });
      61 |   }
      62 | );

      at __tests__/failure.test.js:59:20

  ● template table describe fails on all rows expected c == d › fails

    expect(received).toBe(expected) // Object.is equality

    Expected: \\"d\\"
    Received: \\"c\\"

      57 |   ({left, right}) => {
      58 |     it('fails ', () => {
    > 59 |       expect(left).toBe(right);
         |                    ^
      60 |     });
      61 |   }
      62 | );

      at __tests__/failure.test.js:59:20

  ● array table describe fails on all rows expected a == b › fails

    expect(received).toBe(expected) // Object.is equality

    Expected: \\"b\\"
    Received: \\"a\\"

      66 |   (left, right) => {
      67 |     it('fails', () => {
    > 68 |       expect(left).toBe(right);
         |                    ^
      69 |     });
      70 |   }
      71 | );

      at __tests__/failure.test.js:68:20

  ● array table describe fails on all rows expected c == d › fails

    expect(received).toBe(expected) // Object.is equality

    Expected: \\"d\\"
    Received: \\"c\\"

      66 |   (left, right) => {
      67 |     it('fails', () => {
    > 68 |       expect(left).toBe(right);
         |                    ^
      69 |     });
      70 |   }
      71 | );

      at __tests__/failure.test.js:68:20

"
`;
